git commit = enregistre les changement grace a un commentaire
git add files = ajouter des changements
git status = suivre les changements
git add . = selectionne et fait suivre (met en commit) toutes les modifications
git commit-m "" = laisser un commentaire pour specifier les commande apporte
git init = lancer l initialisation de git

------
systeme de version :
centralise : tous les collaborateurs travaille sur une seule machine et serveur
distribue : tous les developpeurs disposent du fichier source 
git est un outil open source creer en 2005 : efficace, rapide, collaborer

-------
Notion de branche
permet d avoir une arborescence du travail effectue et de mieux suivre le travail
 2 facons de creer une branche : a partir d une autre branche ou a partir de l Etat actuel du 
travail (git branch plus nom) elle permet aussi de savoir sur quelle branche on est
git branches : afficher toutes les branches
Pour passer d une branche a une autre, on utilise git checkout (nom de la branche)

--changer le nom  d une branche
	git branch -m version4 (ancien nom) version2
pour supprimer un fichier on fait : git rm --catch (plus nom du fichier) 
les deux tires permettent de supprimer le fichier de l etat de sauvegarde et non completement

-- supprimer une branche
git branch -d(pour delete) version2
----
outils d hebergement de votre code ou projet
github, gitlab, bitbucket
--
git push origin (plus le nom de la branche) permet d envoyer les modifs realiser sur le depot local vers le depot distant
---
recuperer les modifs
git pull origin (nom de la branche) permet d appliquer les modifs realiser sur gitup sur vs code
-- faire passer une branche de locale a distance
 git push --set-upstream origin (nom de la branche)
--cloner un projet
git clone (plus le lien du document)

git touch cree un fichier vide ex : git touch index.html

git checkout -- . permet d annuler des changements
----racourci
 git add ". fichier ".fichier2

git ignore permet d ignorer un fichier lors de la sauvegarde des modifs
git merge nom du fichier pour fisionner les differents branches
git log affiche l historique de tous les commit realiser
---
git help --all voir les differentes commande avec git
 git help (le nom de la commande)
--- Restaurer l historique des anciennes versions
git log --online, ensuite tu met git reset (l id de la version interesse)
Pour recuperer les anciennes versions et annuler les nouvelle
git reset --hard plus id
--relier un doc a git up : git remote origin (plus lien de gitup)
ensuite git remote pour verifier